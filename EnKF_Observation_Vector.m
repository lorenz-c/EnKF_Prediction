function [Y, H, varargout] = EnKF_Observation_Vector(settings)

% Load some data

if ~isempty(settings.obs.data.prec)
    P = prep_dta(settings.obs.data, ...
             'prec', ...
             'prec', ...
             settings.id_var, ...
             settings.region_ids, ...
             settings.assim.sdte, ...
             settings.assim.edte, ...
             settings.obs.remsc, ...
             settings.obs.filter, ...
             false);
else
    P = NaN(settings.nts, settings.nr_regions);
end

if ~isempty(settings.obs.data.evap)             
    E = prep_dta(settings.obs.data, ...
             'evap', ...
             'evap', ...
             settings.id_var, ...
             settings.region_ids, ...
             settings.assim.sdte, ...
             settings.assim.edte, ...
             settings.obs.remsc, ...
             settings.obs.filter, ...
             false);
else
    E = NaN(settings.nts, settings.nr_regions);
end

if ~isempty(settings.obs.data.runoff)
    R = prep_dta(settings.obs.data, ...
             'runoff', ...
             'runoff', ...
             settings.id_var, ...
             settings.region_ids, ...
             settings.assim.sdte, ...
             settings.assim.edte, ...
             settings.obs.remsc, ...
             settings.obs.filter, ...
             false);
else
    R = NaN(settings.nts, settings.nr_regions);
end

if ~isempty(settings.obs.data.twsc)
    DM = prep_dta(settings.obs.data, ...
             'twsc', ...
             'twsc', ...
             settings.id_var, ...
             settings.region_ids, ...
             settings.assim.sdte, ...
             settings.assim.edte, ...
             settings.obs.remsc, ...
             settings.obs.filter, ...
             false);
else
    DM = NaN(settings.nts, settings.nr_regions);
end

                          

P  = nanmean(P, 3);
E  = nanmean(E, 3);
R  = nanmean(R, 3);
DM = nanmean(DM, 3);


Y = [ P' ; ...
      E' ; ...
      R' ; ...
      DM'];
  
  
if ~isempty(settings.assim.pred_regions) || ~isempty(settings.assim.pred_vars) 
    Y_pred = Y;

    for i = 1:settings.nr_assim_regions
        Y_pred((settings.assim.pred_vars(i)-1) * settings.nr_regions + ...
              settings.assim.c_indx(i), settings.assim.spinup+1:end) = NaN;
    end  
else
    Y_pred = Y;
end

varargout{1} = Y_pred;


I = eye(settings.nr_regions, settings.nr_regions);
O = zeros(settings.nr_regions, settings.nr_regions);

% Observation relation matrix
H = [I   O   O   O ;   % 1. P_est                           = P_obs
     O   I   O   O ;   % 2.         ET_est                  = ET_obs
     O   O   I   O ;   % 3.                  R_est          = R_obs
     O   O   O   I];   % 4.                          dM_est = dM_obs
 

 
% Additional observation input?
if ~isempty(settings.obs.p_alt)
    P_alt = prep_dta(settings.obs.e_alt, ...
                 'prec', ...
                 'prec', ...
                 settings.id_var, ...
                 settings.region_ids, ...
                 settings.assim.sdte, ...
                 settings.assim.edte, ...
                 settings.obs.remsc, ...
                 settings.obs.filter, ...
                 false);
    
    Y      = [Y; P_alt'];   
    Y_pred = [Y_pred; P_alt'];  
    H      = [H; I O O O];
    varargout{1} = Y_pred;
end
    
if ~isempty(settings.obs.e_alt)
    E_alt = prep_dta(settings.obs.e_alt, ...
                 'evap', ...
                 'evap', ...
                 settings.id_var, ...
                 settings.region_ids, ...
                 settings.assim.sdte, ...
                 settings.assim.edte, ...
                 settings.obs.remsc, ...
                 settings.obs.filter, ...
                 false);
    
    Y = [Y; E_alt'];   
    Y_pred = [Y_pred; E_alt'];  
    H = [H; O I O O];
    varargout{1} = Y_pred;
end

if ~isempty(settings.obs.r_alt)
    R_alt = prep_dta(settings.obs.r_alt, ...
                 'runoff', ...
                 'runoff', ...
                 settings.id_var, ...
                 settings.region_ids, ...
                 settings.assim.sdte, ...
                 settings.assim.edte, ...
                 settings.obs.remsc, ...
                 settings.obs.filter, ...
                 false);
  
    Y      = [Y; R_alt']; 
    Y_pred = [Y_pred; R_alt'];  
    H      = [H; O O I O];
    varargout{1} = Y_pred;
end

if ~isempty(settings.obs.dm_alt)
    DM_alt = prep_dta(settings.obs.dm_alt, ...
                 'twsc', ...
                 'twsc', ...
                 settings.id_var, ...
                 settings.region_ids, ...
                 settings.assim.sdte, ...
                 settings.assim.edte, ...
                 settings.obs.remsc, ...
                 settings.obs.filter, ...
                 false);
    
    Y      = [Y; DM_alt'];   
    Y_pred = [Y_pred; DM_alt'];  
    H      = [H; O O O I];
    varargout{1} = Y_pred;
end


        

    




    

